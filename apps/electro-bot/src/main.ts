// ----- –ö–û–î "–ü–Ü–°–õ–Ø" (–°–ü–†–û–©–ï–ù–ò–ô) -----
import { Logger } from '@nestjs/common';
import { NestFactory } from '@nestjs/core';
import { AppModule } from './app/app.module';
import { NotificationBotService } from '@electrobot/bot'; // <-- –Ü–º–ø–æ—Ä—Ç—É—î–º–æ —Å–µ—Ä–≤—ñ—Å
import * as bodyParser from 'body-parser'; // <-- –Ü–º–ø–æ—Ä—Ç—É—î–º–æ body-parser

// –®–ª—è—Ö –¥–ª—è –≤–µ–±—Ö—É–∫–∞
const WEBHOOK_PATH = `/api/webhook`; // –¶–µ–π —à–ª—è—Ö –º–∏ –≤–∫–∞–∂–µ–º–æ Telegram –≤—Ä—É—á–Ω—É

async function bootstrap() {
  const app = await NestFactory.create(AppModule);

  // –î–æ–¥–∞—î–º–æ middleware –¥–ª—è –æ–±—Ä–æ–±–∫–∏ JSON-–∑–∞–ø–∏—Ç—ñ–≤ –≤—ñ–¥ Telegram
  app.use(bodyParser.json()); // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ —ñ–º–ø–æ—Ä—Ç–æ–≤–∞–Ω–∏–π body-parser

  // –û—Ç—Ä–∏–º—É—î–º–æ –µ–∫–∑–µ–º–ø–ª—è—Ä NotificationBotService –ø—ñ—Å–ª—è —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó NestJS
  const notificationBotService = app.get(NotificationBotService);

  // –î–æ–¥–∞—î–º–æ —Å–ª—É—Ö–∞—á–∞ –¥–ª—è POST –∑–∞–ø–∏—Ç—ñ–≤ –Ω–∞ –Ω–∞—à —à–ª—è—Ö –≤–µ–±—Ö—É–∫–∞
  const expressApp = app.getHttpAdapter().getInstance();
  expressApp.post(WEBHOOK_PATH, (req, res) => {
    try {
      // –û—Ç—Ä–∏–º—É—î–º–æ –æ—Å–Ω–æ–≤–Ω–∏–π —ñ–Ω—Å—Ç–∞–Ω—Å –±–æ—Ç–∞ –∑ —Å–µ—Ä–≤—ñ—Å—É
      const mainBotInstance = notificationBotService.getMainTelegramBotInstance(); // –í–∏–∫–ª–∏–∫–∞—î–º–æ –º–µ—Ç–æ–¥, —è–∫–∏–π –º–∏ –¥–æ–¥–∞–º–æ
      if (mainBotInstance) {
         mainBotInstance.processUpdate(req.body); // –ü–µ—Ä–µ–¥–∞—î–º–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –±–æ—Ç—É
         res.sendStatus(200); // –ü–æ–≤—ñ–¥–æ–º–ª—è—î–º–æ Telegram, —â–æ –≤—Å–µ –æ–∫
      } else {
         Logger.error('Could not get main bot instance to process update', 'Webhook');
         res.sendStatus(500);
      }
    } catch(error) {
       Logger.error(`Error processing webhook update: ${error}`, 'Webhook');
       res.sendStatus(500);
    }
  });

  // –ó–∞–ø—É—Å–∫–∞—î–º–æ –≤–µ–±-—Å–µ—Ä–≤–µ—Ä
  const port = process.env.PORT || 3000;
  await app.listen(port);
  Logger.log(`üöÄ Application is running on port ${port}`, 'Bootstrap');
  // –ú–∏ –±—ñ–ª—å—à–µ –Ω–µ –Ω–∞–º–∞–≥–∞—î–º–æ—Å—è –≤—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏ –≤–µ–±—Ö—É–∫ —Ç—É—Ç
}

bootstrap();
